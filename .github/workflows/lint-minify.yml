name: Run gulp tasks

# Controls when the action will run.
on:
  pull_request:
    # On which branch
    branches: ['staging', 'master']

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  phplint:
      runs-on: ubuntu-latest

      steps:
        - uses: actions/checkout@v3
        - uses: stoicbuddha/PHP-Lint@master
  # Job name
  version_check:
    needs: phplint
    # Runner name
    runs-on: ubuntu-latest

    steps:
      - name: Get plugin/theme version script
        id: getversion
        shell: bash
        run: echo "WP_VERSION=$(curl https://media-aws-dotstudiopro-com.s3.us-west-1.amazonaws.com/wordpress-assets/wp_version.sh | bash)" >> $GITHUB_OUTPUT
      - run: ls
      - name: Dump steps context
        run: echo "$JOB_CONTEXT"
        env:
          JOB_CONTEXT: ${{ toJson(steps) }}
    outputs:
      wp_version: ${{ steps.getversion.outputs.WP_VERSION }}
  # Job name
  build-sync:
    if: ${{ false }}
    needs: version_check
    # Runner name
    runs-on: ubuntu-latest

    steps:
      - name: Dump steps context
        run: echo "$JOB_CONTEXT"
        env:
          JOB_CONTEXT: ${{ toJson(steps) }}
      - name: Dump needs context
        run: echo "$JOB_CONTEXT"
        env:
          JOB_CONTEXT: ${{ toJson(needs) }}
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      # Sets up Python (for node-sass)
      - uses: actions/setup-python@v2
      # Sets up node
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: npm ci
      - run: gulp css
      - run: gulp sass
      - run: gulp js
      # Tag creator
      - uses: rickstaa/action-create-tag@v1
        with:
          tag: ${{ needs.version_check.outputs.wp_version }}
          message: ${{ needs.version_check.outputs.wp_version }}
      - uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --cache-control max-age=604800 --exclude '.git/*' --exclude '.github/*' --exclude '*css-dev/*' --exclude '*sass/*' --exclude '*.php' --exclude '*ugly-js*' --exclude '*unminified/*'
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SOURCE_DIR: 'frontend/assets'
          DEST_DIR: 'wordpress-assets/main-subscription-plugin'
        if: github.base_ref == 'master'